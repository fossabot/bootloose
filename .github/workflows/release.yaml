name: Release

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  prepare:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-20.04
    outputs:
      images: ${{ steps.list-images.outputs.images }}
      tag: ${{ steps.tag-name.outputs.tag }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Tag name
      id: tag-name
      run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
    - name: List images
      id: list-images
      run: |
        image_dirs=$(find images -name 'Dockerfile' -exec dirname {} \; | xargs -n 1 basename)
        image_dirs_json=$(echo "$image_dirs" | jq -R -s -c 'split("\n")[:-1]')
        echo "images=${image_dirs_json}}" >> $GITHUB_OUTPUT

  publish_images:
    if: startsWith(github.ref, 'refs/tags/')
    needs: prepare
    runs-on: ubuntu-20.04
    strategy:
      matrix: 
        image: ${{fromJson(needs.prepare.outputs.images)}}
      fail-fast: false

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: List image architectures
      id: list-arch
      run: |
        archs=$(make -C images ${{ matrix.image }}-arch) 
        echo "archs=${archs}" >> $GITHUB_OUTPUT
    
    - name: Login to Quay
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_PASSWORD }}
        registry: quay.io

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache Buildx Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx

    - name: Build ${{ matrix.image }}
      uses: docker/build-push-action@v5
      with:
        platforms: ${{ steps.list-arch.archs }}
        load: true
        push: true
        tags: |
          quay.io/k0sproject/footloose-${{ matrix.image }}:latest
          quay.io/k0sproject/footloose-${{ matrix.image }}:${{ needs.prepare.outputs.tag }}
        context: images/${{ matrix.image }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

    - name: Tag and Push :latest (skipped for prereleases)
      if: ${{ !contains(needs.prepare.outputs.tag, '-') }}
      run: |
        docker tag quay.io/k0sproject/footloose-${{ matrix.image }}:${{ needs.prepare.outputs.tag }} quay.io/k0sproject/footloose-${{ matrix.image }}:latest
        docker push quay.io/k0sproject/footloose-${{ matrix.image }}:latest
    
  publish_binaries:
    if: startsWith(github.ref, 'refs/tags/')
    needs: prepare
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod

      - name: Build binaries
        id: build_bins
        env:
          TAG_NAME: ${{ needs.prepare.outputs.tag }}
        run: make build-all

      - name: Create release and upload binaries
        uses: softprops/action-gh-release@v1
        with:
          files: |
            bin/footloose-*
            bin/sha256sums.txt
          body_path: bin/sha256sums.md
          tag_name: ${{ needs.prepare.outputs.tag }}
          name: ${{ needs.prepare.outputs.tag }}
          draft: true # So we can manually edit before publishing
          prerelease: ${{ contains(needs.prepare.outputs.tag, '-') }} # v0.1.2-beta1, 1.2.3-rc1
